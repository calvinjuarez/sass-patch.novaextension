<?xml version="1.0" encoding="UTF-8"?>
<syntax name="scss-patch">
    <meta>
        <name>SCSS (patch)</name>
        <type>stylesheet</type>
        <preferred-file-extension>scss</preferred-file-extension>
    </meta>

    <detectors>
        <extension priority="1.0">scss</extension>
    </detectors>

    <identifiers>
        <prefixes>
            <string>#$</string>
        </prefixes>
    </identifiers>

    <indentation>
        <increase>
            <expression>(\{[^}\"']*$)|(\[[^\]\"']*$)|(\([^)\"']*$)</expression>
        </increase>
        <decrease>
            <expression>^\s*(\s*/\*.*\*/\s*)*[\}\]\)\\]</expression>
        </decrease>
    </indentation>

    <comments>
        <multiline>
            <starts-with>
                <expression>/*</expression>
            </starts-with>
            <ends-with>
                <expression>*/</expression>
            </ends-with>
        </multiline>
        <single>
            <expression>//</expression>
        </single>
    </comments>

    <scopes>
        <include syntax="css-patch" collection="comments" />
        <include syntax="self" collection="interpolations" />
        <include syntax="self" collection="variable-definitions" />
        <include syntax="self" collection="at-rules" />
        <include syntax="self" collection="rules" />

        <include syntax="css-patch" collection="*" />
    </scopes>

    <collections>
        <!-- At-Rules -->
        <collection name="at-rules" override="true">
            <!-- @use -->
            <scope name="scss-patch.style.at-rule.use">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@use)\s+</expression>
                    <capture number="1" name="scss-patch.style.at-rule.include.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" />

                    <include syntax="css-patch" collection="strings" />

                    <scope name="scss-patch.keyword" optional="true">
                        <expression>\b(with)\b</expression>
                    </scope>

                    <scope name="scss-patch.use.arguments">
                        <starts-with>
                            <expression>\(</expression>
                            <capture number="0" name="scss-patch.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="scss-patch.bracket" />
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>@(media|supports|document|page|font-face|include|mixin)\b</expression>
                            </cut-off>
                            <include syntax="self" collection="variable-definitions" />
                            <scope name="scss-patch.style.use.argument.separator">
                                <expression>,</expression>
                            </scope>
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>

            <!-- @include -->
            <scope name="scss-patch.style.at-rule.include">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@include)\s+([a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)?</expression>
                    <capture number="1" name="scss-patch.style.at-rule.include.at" />
                    <capture number="2" name="scss-patch.style.at-rule.include.function.identifier.name" />
                </starts-with>
                <ends-with>
                    <expression>(?&lt;=\})|;</expression>
                </ends-with>
                <subscopes>
                    <cut-off>
                        <expression>@(media|supports|document|page|font-face|include|mixin)\b</expression>
                    </cut-off>

                    <include syntax="css-patch" collection="comments" />

                    <scope name="scss-patch.style.include.arguments">
                        <starts-with>
                            <expression>\(</expression>
                            <capture number="0" name="scss-patch.style.include.arguments.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="scss-patch.style.include.arguments.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="values" />
                            <scope name="scss-patch.style.include.argument.separator">
                                <expression>,</expression>
                            </scope>
                        </subscopes>
                    </scope>

                    <include syntax="self" collection="attribute-lists" />
                </subscopes>
            </scope>

            <!-- @mixin -->
            <scope name="scss-patch.style.at-rule.mixin">
                <symbol type="function">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@mixin)\s+([a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)?</expression>
                    <capture number="1" name="scss-patch.style.at-rule.mixin.at" />
                    <capture number="2" name="scss-patch.style.at-rule.mixin.function.identifier.name" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />

                    <scope name="scss-patch.style.mixin.arguments" optional="true">
                        <starts-with>
                            <expression>\(</expression>
                            <capture number="0" name="scss-patch.style.mixin.arguments.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="scss-patch.style.mixin.arguments.bracket" />
                        </ends-with>
                        <subscopes>
                            <scope name="scss-patch.style.mixin.argument">
                                <symbol type="argument" />
                                <starts-with>
                                    <expression>($(?:[a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*))\s*(:)?</expression>
                                    <capture number="1" name="scss-patch.style.mixin.argument.identifier.variable.name" />
                                    <capture number="2" name="scss-patch.style.mixin.argument.colon" />
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|\))</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                            <scope name="scss-patch.style.function.argument.identifier.variable.name">
                                <symbol type="argument" />
                                <expression>\$[a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+</expression>
                            </scope>
                            <include syntax="self" collection="values" />
                            <scope name="scss-patch.style.mixin.argument.separator">
                                <expression>,</expression>
                            </scope>
                        </subscopes>
                    </scope>

                    <include syntax="self" collection="at-rule-selector-blocks" />
                </subscopes>
            </scope>

            <!-- @function -->
            <scope name="scss-patch.style.at-rule.function">
                <symbol type="function">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@function)\s+([a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)?</expression>
                    <capture number="1" name="scss-patch.style.at-rule.function.at" />
                    <capture number="2" name="scss-patch.style.at-rule.function.identifier.name" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />

                    <scope name="scss-patch.style.function.arguments">
                        <starts-with>
                            <expression>\(</expression>
                            <capture number="0" name="scss-patch.style.function.arguments.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="scss-patch.style.function.arguments.bracket" />
                        </ends-with>
                        <subscopes>
                            <scope name="scss-patch.style.function.argument">
                                <symbol type="argument" />
                                <starts-with>
                                    <expression>($(?:[a-zA-Z_-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*))\s*(:)?</expression>
                                    <capture number="1" name="scss-patch.style.function.argument.identifier.variable.name" />
                                    <capture number="2" name="scss-patch.style.function.argument.colon" />
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|\))</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                            <scope name="scss-patch.style.function.argument.identifier.variable.name">
                                <symbol type="argument" />
                                <expression>\$[a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+</expression>
                            </scope>
                            <include syntax="self" collection="values" />
                            <scope name="scss-patch.style.function.argument.separator">
                                <expression>,</expression>
                            </scope>
                        </subscopes>
                    </scope>

                    <include syntax="self" collection="at-rule-selector-blocks" />
                </subscopes>
            </scope>

            <!-- @each -->
            <scope name="scss-patch.style.at-rule.each">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@each)\s+</expression>
                    <capture number="1" name="scss-patch.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />

                    <include syntax="self" collection="variables" optional="true" />

                    <scope name="scss-patch.keyword" optional="true">
                        <expression>\b(in)\b</expression>
                    </scope>

                    <include syntax="self" collection="variables" optional="true" />

                    <include syntax="self" collection="attribute-lists" optional="true" />
                </subscopes>
            </scope>

            <!-- @for -->
            <scope name="scss-patch.style.at-rule.for">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@for)\s+</expression>
                    <capture number="1" name="scss-patch.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />

                    <include syntax="self" collection="variables" optional="true" />

                    <scope name="scss-patch.keyword" optional="true">
                        <expression>\b(from)\b</expression>
                    </scope>

                    <include syntax="self" collection="values" optional="true" />

                    <scope name="scss-patch.keyword" optional="true">
                        <expression>\b(to)\b</expression>
                    </scope>

                    <include syntax="self" collection="values" optional="true" />

                    <include syntax="self" collection="attribute-lists" optional="true" />
                </subscopes>
            </scope>

            <!-- @while -->
            <scope name="scss-patch.style.at-rule.while">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@while)\s+</expression>
                    <capture number="1" name="scss-patch.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />

                    <include syntax="self" collection="conditional-expressions" optional="true" />

                    <include syntax="self" collection="attribute-lists" optional="true" />
                </subscopes>
            </scope>

            <!-- @if -->
            <scope name="scss-patch.style.at-rule.if">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@if)\s+</expression>
                    <capture number="1" name="scss-patch.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />

                    <include syntax="self" collection="conditional-expressions" optional="true" repeat="true" />

                    <include syntax="self" collection="attribute-lists" optional="true" />
                </subscopes>
            </scope>

            <!-- @else if -->
            <scope name="scss-patch.style.at-rule.elseif">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@else\sif)\s+</expression>
                    <capture number="1" name="scss-patch.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />

                    <include syntax="self" collection="conditional-expressions" optional="true" repeat="true" />

                    <include syntax="self" collection="attribute-lists" optional="true" />
                </subscopes>
            </scope>

            <!-- @else -->
            <scope name="scss-patch.style.at-rule.else">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(@else)\s+</expression>
                    <capture number="1" name="scss-patch.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />

                    <include syntax="self" collection="attribute-lists" optional="true" />
                </subscopes>
            </scope>

            <!-- Other SCSS Directives -->
            <scope name="scss-patch.style.at-rule">
                <symbol type="style-directive">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>@(return|error|warn|debug|forward|content|function|extend|at-root|if|else|for|while)\b</expression>
                    <capture number="0" name="scss-patch.style.at-rule.at" />
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="css-patch" collection="comments" optional="true" repeat="true" />
                    <include syntax="self" collection="values" optional="true" repeat="true" />
                </subscopes>
            </scope>

            <!-- CSS At-Rules -->
            <include syntax="css-patch" collection="at-rules" />
        </collection>

        <!-- Rules -->
        <collection name="rules" override="true">
            <scope name="scss-patch.style.rule">
                <symbol type="style-ruleset" name-selector="style.selector">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>
                        (?=
                            [&amp;+&gt;~*\\\[]
                            |\b[a-zA-Z]
                            |(?:\:|\.|\#)(?:[a-zA-Z-])
                        )
                        (?![a-zA-Z-][a-zA-Z0-9-]*:(?:[^\w]|[a-zA-Z0-9-_]+(?:;)))
                    </expression>
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="selectors" />
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    <include syntax="self" collection="attribute-lists" />
                </subscopes>
            </scope>
        </collection>

        <!-- Selectors -->
        <collection name="selectors" override="true">
            <scope name="scss-patch.style.selector">
                <starts-with>
                    <expression>(?![a-zA-Z_-][a-zA-Z0-9_-]*\s*:\s)(?=[&amp;+&gt;~:.*\#a-zA-Z\\\[])</expression>
                </starts-with>
                <ends-with />
                <subscopes anchored="true">
                    <include syntax="self" collection="selector-components" repeat="true" />
                </subscopes>
            </scope>
        </collection>

        <!-- Selector Components -->
        <collection name="selector-components">
            <include syntax="css-patch" collection="comments" />
            <include syntax="self" collection="interpolations" />
            <include syntax="css-patch" collection="pseudoelements" />
            <include syntax="css-patch" collection="simple-selectors" />
            <scope name="scss-patch.style.selector.operator">
                <expression>&amp;|\+|&gt;|~</expression>
            </scope>
            <scope name="scss-patch.style.selector.separator">
                <expression>,</expression>
            </scope>
        </collection>

        <!-- Definition Blocks inside of certain @at-rules -->
        <collection name="at-rule-selector-blocks" override="true">
            <scope name="scss-patch.style.at-rule.media.definition">
                <symbol type="block">
                    <context behavior="subtree" fold-type="style-directive" />
                </symbol>
                <starts-with>
                    <expression>\{</expression>
                    <capture number="0" name="scss-patch.at-rule.definition.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="scss-patch.at-rule.definition.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="css-patch" collection="comments" />
                    <include syntax="self" collection="at-rules" />
                    <include syntax="self" collection="attributes" />
                    <include syntax="self" collection="rules" />
                </subscopes>
            </scope>
        </collection>

        <!-- Interpolations -->
        <collection name="interpolations">
            <scope name="scss-patch.interpolation">
                <starts-with>
                    <expression>\#\{</expression>
                    <capture number="0" name="scss-patch.bracket.interpolation" />
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="scss-patch.bracket.interpolation" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="functions" />
                    <include syntax="self" collection="operators" />
                    <include syntax="self" collection="variables" />
                    <include syntax="css-patch" collection="values" />
                </subscopes>
            </scope>
        </collection>

        <!-- Values -->
        <collection name="values" override="true">
            <!-- Keywords -->
            <scope name="scss-patch.style.value.keyword.default">
                <expression>!default</expression>
            </scope>

            <!-- Interpolations -->
            <include syntax="self" collection="interpolations" />

            <!-- Identifiers -->
            <include syntax="self" collection="variables" />

            <!-- CSS Values -->
            <include syntax="css-patch" collection="values" />

            <!-- Functions -->
            <include syntax="self" collection="functions" />

            <!-- Operators -->
            <include syntax="self" collection="operators" />
        </collection>

        <!-- Functions -->
        <collection name="functions">
            <scope name="scss-patch.style.value.function">
                <starts-with>
                    <expression>\b([a-zA-Z-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)(\()</expression>
                    <capture number="1" name="scss-patch.style.value.function.name" />
                    <capture number="2" name="scss-patch.style.value.function.bracket" />
                </starts-with>
                <ends-with>
                    <expression>(\))</expression>
                    <capture number="1" name="scss-patch.style.value.function.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="values" />
                </subscopes>
            </scope>
        </collection>

        <!-- Operators -->
        <collection name="operators">
            <scope name="scss-patch.style.operator">
                <expression>(-|\+|\*|\/|%|!=|==|&lt;=|&lt;|&gt;=|&gt;|\band\b|\bor\b|\bnot\b)</expression>
            </scope>
        </collection>

        <!-- Variables -->
        <collection name="variables">
            <scope name="scss-patch.style.value.identifier.variable">
                <expression>\$[a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+</expression>
            </scope>
        </collection>

        <!-- Variable Definitions -->
        <collection name="variable-definitions">
            <scope name="scss-patch.style.variable-definition">
                <symbol type="variable" scope="local" />
                <starts-with>
                    <expression>(\$[a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]+)\s*(:)</expression>
                    <capture number="1" name="scss-patch.style.variable-definition.identifier.variable.name" />
                    <capture number="2" name="scss-patch.style.variable-definition.separator" />
                </starts-with>
                <ends-with>
                    <expression>;</expression>
                </ends-with>
                <subscopes>
                    <cut-off>
                        <expression>(?=\}|\))</expression>
                    </cut-off>
                    <include syntax="css-patch" collection="comments" />
                    <scope name="scss-patch.style.variable-definition.value">
                        <starts-with>
                            <expression>(?&lt;=:)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=;)</expression>
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>(?=\}|\))</expression>
                            </cut-off>
                            <include syntax="self" collection="lists" />
                            <include syntax="self" collection="values" />
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
        </collection>

        <!-- Lists & Maps -->
        <collection name="lists">
            <scope name="scss-patch.style.list">
                <starts-with>
                    <expression>\(</expression>
                    <capture number="0" name="scss-patch.style.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="scss-patch.style.bracket" />
                </ends-with>
                <subscopes>
                    <cut-off>
                        <expression>(?=;|\})</expression>
                    </cut-off>
                    <scope name="scss-patch.style.map.key.unquoted">
                        <starts-with>
                            <expression>\b([a-zA-Z-_][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)\s*(:)</expression>
                            <capture number="1" name="scss-patch.style.identifier.key.name" />
                            <capture number="2" name="scss-patch.style.separator" />
                        </starts-with>
                        <ends-with>
                            <expression>,|(?=\))</expression>
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>(?=\})</expression>
                            </cut-off>
                            <include syntax="css-patch" collection="comments" />
                            <scope name="scss-patch.style.map.value">
                                <starts-with>
                                    <expression>(?&lt;=:)</expression>
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|;|\}|\))</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="scss-patch.style.map.key.double-quoted">
                        <starts-with>
                            <expression>&quot;([^\\&quot;]|\\.)*(?:(&quot;\s*(:))|$)</expression>
                            <capture number="2" name="scss-patch.style.separator" />
                        </starts-with>
                        <ends-with>
                            <expression>,|(?=\))</expression>
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>(?=\})</expression>
                            </cut-off>
                            <include syntax="css-patch" collection="comments" />
                            <scope name="scss-patch.style.map.value">
                                <starts-with>
                                    <expression>(?&lt;=:)</expression>
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|;|\}|\))</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="scss-patch.style.map.key.single-quoted">
                        <starts-with>
                            <expression>&quot;([^\\&apos;]|\\.)*(?:(&apos;\s*(:))|$)</expression>
                            <capture number="2" name="scss-patch.style.separator" />
                        </starts-with>
                        <ends-with>
                            <expression>,|(?=\))</expression>
                        </ends-with>
                        <subscopes>
                            <cut-off>
                                <expression>(?=\})</expression>
                            </cut-off>
                            <include syntax="css-patch" collection="comments" />
                            <scope name="scss-patch.style.map.value">
                                <starts-with>
                                    <expression>(?&lt;=:)</expression>
                                </starts-with>
                                <ends-with>
                                    <expression>(?=,|;|\}|\))</expression>
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="values" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>

                    <include syntax="self" collection="values" />
                </subscopes>
            </scope>
        </collection>

        <!-- Attribute Lists -->
        <collection name="attribute-lists" override="true">
            <scope name="scss-patch.style.attribute-list">
                <symbol type="block">
                    <context behavior="subtree" />
                </symbol>
                <starts-with>
                    <expression>\{</expression>
                    <capture number="0" name="scss-patch.style.attribute-list.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="scss-patch.style.attribute-list.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="css-patch" collection="comments" />
                    <include syntax="self" collection="variable-definitions" />
                    <include syntax="self" collection="at-rules" />
                    <include syntax="self" collection="attributes" />
                    <include syntax="self" collection="rules" />
                    <include syntax="self" collection="interpolations" />
                </subscopes>
            </scope>
        </collection>

        <!-- Attributes -->
        <collection name="attributes" override="true">
            <include syntax="css-patch" collection="attributes" />

            <scope name="scss-patch.attribute.interpolated">
                <starts-with>
                    <expression>
                    (?=
                        (?:\b[a-zA-Z-][a-zA-ZÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)\#\{
                        |\#\{
                    )
                    </expression>
                </starts-with>
                <ends-with>
                    <expression>;|(?=\}|\))</expression>
                </ends-with>
                <subscopes anchored="true" skip-whitespace="false">
                    <include syntax="self" collection="attribute-name-components" repeat="true" />
                    <include syntax="self" collection="comments" optional="true" repeat="true" />
                    <scope name="scss-patch.style.attribute.separator">
                        <expression>:</expression>
                    </scope>
                    <scope name="scss-patch.style.attribute.value" optional="true">
                        <starts-with>
                            <expression>(?&lt;=:)</expression>
                        </starts-with>
                        <ends-with>
                            <expression>(?=;|(?=\}|\)))</expression>
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="comments" />
                            <include syntax="self" collection="values" />
                        </subscopes>
                    </scope>
                    <scope name="css-patch.semicolon" optional="true">
                        <expression>;</expression>
                    </scope>
                </subscopes>
            </scope>
        </collection>

        <!-- Attribute Name Components -->
        <collection name="attribute-name-components">
            <include syntax="self" collection="interpolations" />
            <scope name="scss-patch.attribute.name-component">
                <expression>([a-zA-Z-_][A-Za-zÀ-ÖØ-öø-ÿŸřŘšŠžŽ0-9-_]*)</expression>
            </scope>
        </collection>

        <!-- Attribute Values -->
        <collection name="attribute-values" override="true">
            <include syntax="css-patch" collection="attribute-values" />
            <include syntax="self" collection="attribute-lists" />
        </collection>

        <!-- Conditional Expressions -->
        <collection name="conditional-expressions">
            <include syntax="css-patch" collection="comments" />
            <include syntax="self" collection="values" />
            <include syntax="self" collection="operators" />
            <scope name="scss-patch.conditional.bare-word">
                <expression>[a-zA-Z_][a-zA-Z0-9_-]*</expression>
            </scope>
        </collection>

        <!-- Operators -->
        <collection name="operators">
            <scope name="python.keyword">
                <expression>\b(and|or|not)\b</expression>
            </scope>
            <scope name="python.operator">
                <expression>(\+|\-|\*|\*\*|/|%|\=|\=\=|!\=|\&lt;|\&gt;|\&lt;\=|\&gt;=)</expression>
            </scope>
        </collection>
    </collections>
</syntax>
